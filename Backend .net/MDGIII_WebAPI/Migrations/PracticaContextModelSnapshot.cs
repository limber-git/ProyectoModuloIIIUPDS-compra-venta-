// <auto-generated />
using System;
using MDGIII_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MDGIII_WebAPI.Migrations
{
    [DbContext(typeof(PracticaContext))]
    partial class PracticaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MDGIII_WebAPI.Models.Articulo", b =>
                {
                    b.Property<int>("idarticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idarticulo"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("idcategoria")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("idarticulo");

                    b.HasIndex("idcategoria");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Categoria", b =>
                {
                    b.Property<int>("idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idcategoria"));

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idcategoria");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Detalle_Ingreso", b =>
                {
                    b.Property<int>("iddetalle_ingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iddetalle_ingreso"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idarticulo")
                        .HasColumnType("int");

                    b.Property<int>("idingreso")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_compra")
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("precio_venta")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("iddetalle_ingreso");

                    b.HasIndex("idarticulo");

                    b.HasIndex("idingreso");

                    b.ToTable("detalle_ingresos");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Detalle_Venta", b =>
                {
                    b.Property<int>("iddetalle_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iddetalle_venta"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("descuento")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("idarticulo")
                        .HasColumnType("int");

                    b.Property<int>("idventa")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_venta")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("iddetalle_venta");

                    b.HasIndex("idarticulo");

                    b.HasIndex("idventa");

                    b.ToTable("detalle_ventas");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Ingreso", b =>
                {
                    b.Property<int>("idingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idingreso"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.Property<decimal>("impuesto")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("num_comprobante")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("serie_comprobante")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("total_compra")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("idingreso");

                    b.HasIndex("idproveedor");

                    b.HasIndex("idusuario");

                    b.ToTable("ingresos");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Permiso", b =>
                {
                    b.Property<int>("idpermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idpermiso"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("idpermiso");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Persona", b =>
                {
                    b.Property<int>("idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idpersona"));

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("num_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tipo_persona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idpersona");

                    b.ToTable("personas");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idusuario"));

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("num_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idusuario");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Usuario_Permiso", b =>
                {
                    b.Property<int>("idusuario_permiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idusuario_permiso"));

                    b.Property<int>("idpermiso")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.HasKey("idusuario_permiso");

                    b.HasIndex("idpermiso");

                    b.HasIndex("idusuario");

                    b.ToTable("usuario_permisos");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Venta", b =>
                {
                    b.Property<int>("idventa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idventa"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.Property<decimal>("impuesto")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("num_comprobante")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("serie_comprobante")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("total_venta")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("idventa");

                    b.HasIndex("idcliente");

                    b.HasIndex("idusuario");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Articulo", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Categoria", "categorias")
                        .WithMany()
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categorias");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Detalle_Ingreso", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("idarticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDGIII_WebAPI.Models.Ingreso", "Ingreso")
                        .WithMany()
                        .HasForeignKey("idingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Detalle_Venta", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("idarticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDGIII_WebAPI.Models.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("idventa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Ingreso", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("idproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDGIII_WebAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Usuario_Permiso", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("idpermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDGIII_WebAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MDGIII_WebAPI.Models.Venta", b =>
                {
                    b.HasOne("MDGIII_WebAPI.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDGIII_WebAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
